name: Release

on:
  workflow_dispatch:
    inputs:
      release-tag:
        type: string
        required: true
        default: 'vX.X.X'
      release-name:
        type: string
        required: true
        default: 'Pyxel X.X.X'

jobs:
  create-release:
    runs-on: ubuntu-latest
    needs: [package-windows, package-macos, package-linux]
    if: ${{ github.event.inputs.release-tag != '' && github.event.inputs.release_name != '' }}
    steps:
    - uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release-tag }}
        release_name: ${{ github.event.inputs.release-name }}
        draft: false
        prerelease: true

  upload-files:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./src/artifacts/Linux.zip
        asset_name: go_linux_amd64.zip
        asset_content_type: application/zip
